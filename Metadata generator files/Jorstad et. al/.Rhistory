primate_df$Zeros <- rowSums(primate_df == 0)
zeros_frequency  <- count(primate_df$Zeros)
grob0 <- grobTree(textGrob(paste0("No. of Genes with 0 samples zero :", zeros_frequency[zeros_frequency$x == 0,]$freq),
x=0.25,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10)))
grob1 <- grobTree(textGrob(paste0("No. of Genes with 1 sample zero :",  zeros_frequency[zeros_frequency$x == 1,]$freq),
x=0.25,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=10)))
grob2 <- grobTree(textGrob(paste0("No. of Genes with 2 samples zero :", zeros_frequency[zeros_frequency$x == 2,]$freq),
x=0.25,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10)))
grob3 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 3,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
grob4 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 4,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
p[[count]] <- ggplot(df_list[[cell_type]], aes(x=Zeros)) + geom_histogram()         + labs(title=cell_type)    +
annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob3) +
annotation_custom(grob4) + annotation_custom(grob0)
count <- count + 1
}
g <- ggarrange(plotlist = p, nrow=2, ncol = 3, common.legend = TRUE, legend="bottom")
ggsave(filename = paste0(primate, "zeros.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
for (cell_type in cell_types){
p     <- list()
count <- 1
for (primate in primate_list){
primate_df       <- df_list[[cell_type]][grepl(primate, colnames(df_list[[cell_type]]), fixed = TRUE)]
primate_df$Zeros <- rowSums(primate_df == 0)
zeros_frequency  <- count(primate_df$Zeros)
grob0 <- grobTree(textGrob(paste0("No. of Genes with 0 samples zero :", zeros_frequency[zeros_frequency$x == 0,]$freq),
x=0.25,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10)))
grob1 <- grobTree(textGrob(paste0("No. of Genes with 1 sample zero :",  zeros_frequency[zeros_frequency$x == 1,]$freq),
x=0.25,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=10)))
grob2 <- grobTree(textGrob(paste0("No. of Genes with 2 samples zero :", zeros_frequency[zeros_frequency$x == 2,]$freq),
x=0.25,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10)))
grob3 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 3,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
grob4 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 4,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
p[[count]] <- ggplot(df_list[[cell_type]], aes(x=Zeros)) + geom_histogram()         + labs(title=cell_type)    +
annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob3) +
annotation_custom(grob4) + annotation_custom(grob0)
count <- count + 1
}
g <- ggarrange(plotlist = p, nrow=2, ncol = 3, common.legend = TRUE, legend="bottom")
print(paste0(primate, "zeros.jpg"))
ggsave(filename = paste0(primate, "zeros.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
for (cell_type in cell_types){
p     <- list()
count <- 1
for (primate in primate_list){
primate_df       <- df_list[[cell_type]][grepl(primate, colnames(df_list[[cell_type]]), fixed = TRUE)]
primate_df$Zeros <- rowSums(primate_df == 0)
zeros_frequency  <- count(primate_df$Zeros)
grob0 <- grobTree(textGrob(paste0("No. of Genes with 0 samples zero :", zeros_frequency[zeros_frequency$x == 0,]$freq),
x=0.25,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10)))
grob1 <- grobTree(textGrob(paste0("No. of Genes with 1 sample zero :",  zeros_frequency[zeros_frequency$x == 1,]$freq),
x=0.25,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=10)))
grob2 <- grobTree(textGrob(paste0("No. of Genes with 2 samples zero :", zeros_frequency[zeros_frequency$x == 2,]$freq),
x=0.25,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10)))
grob3 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 3,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
grob4 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 4,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
p[[count]] <- ggplot(df_list[[cell_type]], aes(x=Zeros)) + geom_histogram()         + labs(title=cell_type)    +
annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob3) +
annotation_custom(grob4) + annotation_custom(grob0)
count <- count + 1
}
g <- ggarrange(plotlist = p, nrow=1, ncol = 3, common.legend = TRUE, legend="bottom")
print(paste0(primate, "zeros.jpg"))
ggsave(filename = paste0(cell_type, "zeros.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
for (cell_type in cell_types){
p     <- list()
count <- 1
for (primate in primate_list){
primate_df       <- df_list[[cell_type]][grepl(primate, colnames(df_list[[cell_type]]), fixed = TRUE)]
primate_df$Zeros <- rowSums(primate_df == 0)
zeros_frequency  <- count(primate_df$Zeros)
grob0 <- grobTree(textGrob(paste0("No. of Genes with 0 samples zero :", zeros_frequency[zeros_frequency$x == 0,]$freq),
x=0.25,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10)))
grob1 <- grobTree(textGrob(paste0("No. of Genes with 1 sample zero :",  zeros_frequency[zeros_frequency$x == 1,]$freq),
x=0.25,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=10)))
grob2 <- grobTree(textGrob(paste0("No. of Genes with 2 samples zero :", zeros_frequency[zeros_frequency$x == 2,]$freq),
x=0.25,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10)))
grob3 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 3,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
grob4 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 4,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
p[[count]] <- ggplot(df_list[[cell_type]], aes(x=Zeros)) + geom_histogram()         + labs(title=primate)    +
annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob3) +
annotation_custom(grob4) + annotation_custom(grob0)
count <- count + 1
}
g <- ggarrange(plotlist = p, nrow=1, ncol = 3, common.legend = TRUE, legend="bottom")
ggsave(filename = paste0(cell_type, "zeros.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
for (cell_type in cell_types){
p     <- list()
count <- 1
for (primate in primate_list){
primate_df       <- df_list[[cell_type]][grepl(primate, colnames(df_list[[cell_type]]), fixed = TRUE)]
primate_df$Zeros <- rowSums(primate_df == 0)
zeros_frequency  <- count(primate_df$Zeros)
grob0 <- grobTree(textGrob(paste0("No. of Genes with 0 samples zero :", zeros_frequency[zeros_frequency$x == 0,]$freq),
x=0.25,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10)))
grob1 <- grobTree(textGrob(paste0("No. of Genes with 1 sample zero :",  zeros_frequency[zeros_frequency$x == 1,]$freq),
x=0.25,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=10)))
grob2 <- grobTree(textGrob(paste0("No. of Genes with 2 samples zero :", zeros_frequency[zeros_frequency$x == 2,]$freq),
x=0.25,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10)))
grob3 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 3,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
grob4 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 4,]$freq),
x=0.25,  y=0.75, hjust=0, gp=gpar(col="black", fontsize=10)))
p[[count]] <- ggplot(df_list[[cell_type]], aes(x=Zeros)) + geom_histogram()         + labs(title=primate)    +
annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob3) +
annotation_custom(grob4) + annotation_custom(grob0)
count <- count + 1
}
g <- ggarrange(plotlist = p, nrow=1, ncol = 3, common.legend = TRUE, legend="bottom")
ggsave(filename = paste0(cell_type, "_zeros.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
for (cell_type in cell_types){
p     <- list()
count <- 1
for (primate in primate_list){
primate_df       <- df_list[[cell_type]][grepl(primate, colnames(df_list[[cell_type]]), fixed = TRUE)]
primate_df$Zeros <- rowSums(primate_df == 0)
zeros_frequency  <- count(primate_df$Zeros)
grob0 <- grobTree(textGrob(paste0("No. of Genes with 0 samples zero :", zeros_frequency[zeros_frequency$x == 0,]$freq),
x=0.25,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10)))
grob1 <- grobTree(textGrob(paste0("No. of Genes with 1 sample zero :",  zeros_frequency[zeros_frequency$x == 1,]$freq),
x=0.25,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=10)))
grob2 <- grobTree(textGrob(paste0("No. of Genes with 2 samples zero :", zeros_frequency[zeros_frequency$x == 2,]$freq),
x=0.25,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10)))
grob3 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 3,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
grob4 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 4,]$freq),
x=0.25,  y=0.75, hjust=0, gp=gpar(col="black", fontsize=10)))
p[[count]] <- ggplot(df_list[[cell_type]], aes(x=Zeros)) + geom_histogram()         + labs(title=primate)    +
annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob3) +
annotation_custom(grob4) + annotation_custom(grob0)
count <- count + 1
}
g <- ggarrange(plotlist = p, nrow=1, ncol = 3, common.legend = TRUE, legend="bottom")
g <- annotate_figure(g, top = text_grob(cell_type))
ggsave(filename = paste0(cell_type, "_zeros.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
for (cell_type in cell_types){
p     <- list()
count <- 1
for (primate in primate_list){
primate_df       <- df_list[[cell_type]][grepl(primate, colnames(df_list[[cell_type]]), fixed = TRUE)]
primate_df$Zeros <- rowSums(primate_df == 0)
zeros_frequency  <- count(primate_df$Zeros)
grob0 <- grobTree(textGrob(paste0("No. of Genes with 0 samples zero :", zeros_frequency[zeros_frequency$x == 0,]$freq),
x=0.25,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10)))
grob1 <- grobTree(textGrob(paste0("No. of Genes with 1 sample zero :",  zeros_frequency[zeros_frequency$x == 1,]$freq),
x=0.25,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=10)))
grob2 <- grobTree(textGrob(paste0("No. of Genes with 2 samples zero :", zeros_frequency[zeros_frequency$x == 2,]$freq),
x=0.25,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10)))
grob3 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 3,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
grob4 <- grobTree(textGrob(paste0("No. of Genes with 4 samples zero :", zeros_frequency[zeros_frequency$x == 4,]$freq),
x=0.25,  y=0.75, hjust=0, gp=gpar(col="black", fontsize=10)))
p[[count]] <- ggplot(df_list[[cell_type]], aes(x=Zeros)) + geom_histogram()         + labs(title=primate)    +
annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob3) +
annotation_custom(grob4) + annotation_custom(grob0)
count <- count + 1
}
g <- ggarrange(plotlist = p, nrow=1, ncol = 3, common.legend = TRUE, legend="bottom")
g <- annotate_figure(g, top = text_grob(cell_type))
ggsave(filename = paste0(cell_type, "_zeros.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
for (cell_type in cell_types){
p     <- list()
count <- 1
for (primate in primate_list){
primate_df       <- df_list[[cell_type]][grepl(primate, colnames(df_list[[cell_type]]), fixed = TRUE)]
primate_df$Zeros <- rowSums(primate_df == 0)
zeros_frequency  <- count(primate_df$Zeros)
grob0 <- grobTree(textGrob(paste0("No. of Genes with 0 samples zero :", zeros_frequency[zeros_frequency$x == 0,]$freq),
x=0.25,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10)))
grob1 <- grobTree(textGrob(paste0("No. of Genes with 1 sample zero :",  zeros_frequency[zeros_frequency$x == 1,]$freq),
x=0.25,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=10)))
grob2 <- grobTree(textGrob(paste0("No. of Genes with 2 samples zero :", zeros_frequency[zeros_frequency$x == 2,]$freq),
x=0.25,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10)))
grob3 <- grobTree(textGrob(paste0("No. of Genes with 3 samples zero :", zeros_frequency[zeros_frequency$x == 3,]$freq),
x=0.25,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=10)))
grob4 <- grobTree(textGrob(paste0("No. of Genes with 4 samples zero :", zeros_frequency[zeros_frequency$x == 4,]$freq),
x=0.25,  y=0.75, hjust=0, gp=gpar(col="black", fontsize=10)))
p[[count]] <- ggplot(df_list[[cell_type]], aes(x=Zeros)) + geom_histogram()         + labs(title=primate)    +
annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob3) +
annotation_custom(grob4) + annotation_custom(grob0)
count <- count + 1
}
g <- ggarrange(plotlist = p, nrow=1, ncol = 3, common.legend = TRUE, legend="bottom")
g <- annotate_figure(g, top = text_grob(cell_type))
ggsave(filename = paste0("Sample_zeros_test_results/", cell_type, "_zeros.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
res
library(gmp)
enrich_pvalue <- function(N, A, B, k)
{
m <- A + k
n <- B + k
i <- k:min(m,n)
as.numeric( sum(chooseZ(m,i)*chooseZ(N-m,n-i))/chooseZ(N,n) )
}
enrich_pvalue(8949, 151, 10, 3)
enrich_pvalue(8949, 10, 151, 3)
enrich_pvalue(8949, 10, 3, 151)
enrich_pvalue(8949, 3, 10, 151)
enrich_pvalue(1000, 100, 100, 10)
enrich_pvalue(500, 100, 100, 10)
enrich_pvalue(12000, 100, 100, 10)
suppressMessages(suppressWarnings(library(xlsx)))
library(xlsx)
library(xlsx)
chimp_meta <- readRDS("D:/Downloads/chimp_meta.RDS")
chimp_meta
chimp_meta$dataset
chimp_meta$sex
unique(chimp_meta$sex)
unique(chimp_meta$donor)
chimp_mat <- readRDS("D:/Downloads/chimp_mat.RDS")
gc()
gc()
chimp_all_umap_coords_2d <- readRDS("D:/Downloads/chimp_all_umap_coords_2d.RDS")
chimp_all_umap_coords_2d
`apes_MTG_tax_7622 (1)` <- readRDS("D:/Downloads/apes_MTG_tax_7622 (1).RDS")
`apes_MTG_tax_7622 (1)`
Chimp_Master_metadata_for_plots_and_sharing_12_16_21 <- readRDS("D:/Downloads/Chimp_Master_metadata_for_plots_and_sharing_12_16_21.RDS")
Chimp_Master_metadata_for_plots_and_sharing_12_16_21
unique(Chimp_Master_metadata_for_plots_and_sharing_12_16_21$dataset)
Chimp_Master_metadata_for_plots_and_sharing_12_16_21$sample_id
library(data.table)
tstrsplit(Chimp_Master_metadata_for_plots_and_sharing_12_16_21$sample_id, "_")
tstrsplit(Chimp_Master_metadata_for_plots_and_sharing_12_16_21$sample_id, "-")
tstrsplit(Chimp_Master_metadata_for_plots_and_sharing_12_16_21$sample_id, "-")[[3]]
unique(tstrsplit(Chimp_Master_metadata_for_plots_and_sharing_12_16_21$sample_id, "-")[[3]])
Chimp_Master_metadata_for_plots_and_sharing_12_16_21
Chimp_Master_metadata_for_plots_and_sharing_12_16_21$nCount_RNA
min(Chimp_Master_metadata_for_plots_and_sharing_12_16_21$nCount_RNA)
Chimp_Master_metadata_for_plots_and_sharing_12_16_21$species_tech
unique(Chimp_Master_metadata_for_plots_and_sharing_12_16_21$species_tech)
library(readxl)
Chimp_metadata <- read_excel("Metadata generator files/Jorstad et. al/author_source/Chimp_metadata.xlsx")
View(Chimp_metadata)
unique(Chimp_metadata$confirmed_subclass)
unique(Chimp_metadata$neighborhood)
unique(Chimp_metadata$donor)
gorilla_meta <- readRDS("D:/Downloads/gorilla_meta.RDS")
gorilla_meta
unique(gorilla_meta$sex)
rhesus_meta <- readRDS("D:/Downloads/rhesus_meta.RDS")
unique(rhesus_meta)
unique(rhesus_meta$species)
unique(rhesus_meta$sex)
rm(list = ls())
suppressWarnings(suppressMessages(library(readr)))
suppressWarnings(suppressMessages(library(stringr)))
suppressWarnings(suppressMessages(library(xlsx)))
suppressWarnings(suppressMessages(library(limma)))
suppressWarnings(suppressMessages(library(EnhancedVolcano)))
suppressWarnings(suppressMessages(library(ggplot2)))
suppressWarnings(suppressMessages(library(gplots)))
suppressWarnings(suppressMessages(library(RColorBrewer)))
suppressWarnings(suppressMessages(library(hash)))
suppressWarnings(suppressMessages(library(data.table)))
suppressWarnings(suppressMessages(library(ggrepel)))
suppressWarnings(suppressMessages(library(gridExtra)))
suppressWarnings(suppressMessages(library(ggpubr)))
suppressWarnings(suppressMessages(library(grid)))
suppressWarnings(suppressMessages(library(readxl)))
suppressWarnings(suppressMessages(library(xlsx)))
folder_name   <- "Results/"
study_results <- list.files(folder_name)
cell_types <- c("Astro", "Excite", "Inhibit", "Microglia", "Oligo", "OPC")
for (study in study_results){
chimp_aggregate_study_cell_count_hash <- list()
human_aggregate_study_cell_count_hash <- list()
cell_number_file <- read_excel(paste0(folder_name , study, "/", study, "_MajorCellTypes.xlsx"))
#cell_number_file <- read_excel(paste0("Cell counts Tables/", cell_number_file))
colnames(cell_number_file) <- c("cell_type", "chimp", "macaque", "human")
for (cell_type in cell_number_file$cell_type[1:6]){
chimp_aggregate_study_cell_count_hash[[cell_type]] <- c(chimp_aggregate_study_cell_count_hash[[cell_type]], as.numeric(round(cell_number_file[cell_number_file$cell_type == cell_type, "chimp"]*cell_number_file[cell_number_file$cell_type == "TOTAL", "chimp"]/100)[1, 1]))
human_aggregate_study_cell_count_hash[[cell_type]] <- c(human_aggregate_study_cell_count_hash[[cell_type]], round(cell_number_file[cell_number_file$cell_type == cell_type, "human"]*cell_number_file[cell_number_file$cell_type == "TOTAL", "human"]/100)[1, 1])
}
names(chimp_aggregate_study_cell_count_hash) <- cell_types
names(human_aggregate_study_cell_count_hash) <- cell_types
# saveRDS(chimp_aggregate_study_cell_count_hash, paste0("cell_numbers_hash/", study, "_chimp_numbers.rds"))
# saveRDS(human_aggregate_study_cell_count_hash, paste0("cell_numbers_hash/", study, "_human_numbers.rds"))
}
FDR <- 0.05
folder_name <- "Results_Allv2/"
study_results <- list.files(folder_name)
for (study in study_results[c(2, 3)]){
chimp_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_DRGene_numbers.rds"))
human_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_DRGene_numbers.rds"))
chimp_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_URGene_numbers.rds"))
human_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_URGene_numbers.rds"))
considered_Genes              <- readRDS(paste0(folder_name, study, "/", study, FDR, "_three_species_considered_Gene_Number.rds"))
gene_proportion_table         <- c()
cell_names                    <- c()
for (key in names(chimp_up_regulated)){
gene_proportion_table <- rbind(gene_proportion_table, c(human_up_regulated[[key]],
#paste0("(", DESeq_human_UR[[study]][[key]][1], ",", DESeq_human_UR[[study]][[key]][2], ")"),
chimp_up_regulated[[key]],
#paste0("(", DESeq_chimp_UR[[study]][[key]][1], ",", DESeq_chimp_UR[[study]][[key]][2], ")"),
human_down_regulated[[key]],
#paste0("(", DESeq_human_DR[[study]][[key]][1], ",", DESeq_human_DR[[study]][[key]][2], ")"),
chimp_down_regulated[[key]],
#paste0("(", DESeq_chimp_DR[[study]][[key]][1], ",", DESeq_chimp_DR[[study]][[key]][2], ")"),
considered_Genes[[key]],
#paste0("(", considered_list[[study]][[key]][1], ",", considered_list[[study]][[key]][2], ")"),
round(100*human_up_regulated[[key]]/considered_Genes[[key]],   2),
#paste0("(", DESeq_human_UR_proportion[[study]][[key]][1], ",", DESeq_human_UR_proportion[[study]][[key]][2], ")"),
round(100*chimp_up_regulated[[key]]/considered_Genes[[key]],   2),
#paste0("(", DESeq_chimp_UR_proportion[[study]][[key]][1], ",", DESeq_chimp_UR_proportion[[study]][[key]][2], ")"),         p_value_UP[[study]][[key]],
round(100*human_down_regulated[[key]]/considered_Genes[[key]], 2),
#paste0("(", DESeq_human_DR_proportion[[study]][[key]][1], ",", DESeq_human_DR_proportion[[study]][[key]][2], ")"),
round(100*chimp_down_regulated[[key]]/considered_Genes[[key]], 2)
#paste0("(", DESeq_chimp_DR_proportion[[study]][[key]][1], ",", DESeq_chimp_DR_proportion[[study]][[key]][2], ")"),         p_value_DOWN[[study]][[key]],
#round(human_up_regulated[[key]]/chimp_up_regulated[[key]], 2),
#paste0("(", DESeq_chimp_UR_proportion_ratio[[study]][[key]][1], ",", DESeq_chimp_UR_proportion_ratio[[study]][[key]][2], ")"),
#round(human_down_regulated[[key]]/chimp_down_regulated[[key]], 2)
#paste0("(", DESeq_chimp_DR_proportion_ratio[[study]][[key]][1], ",", DESeq_chimp_DR_proportion_ratio[[study]][[key]][2], ")"
))
cell_names            <- c(cell_names, key)
}
colnames(gene_proportion_table) <- c("Human Specific UP",
"Chimp Specific UP",
"Human Specific DOWN",
"Chimp Specific DOWN",
"Considered Genes",
"Human.Specific.UP.Proportion",
"Chimp.Specific.UP.Proportion",
"Human.Specific.DOWN.Proportion",
"Chimp.Specific.DOWN.Proportion"
)
rownames(gene_proportion_table) <- cell_names
print(gene_proportion_table)
write.xlsx(gene_proportion_table, paste0("Results/", study, "/", study, "_gene_table_prefiltering_23.xlsx"))
}
FDR = 0.05
folder_name   <- "Results/"
study_results <- list.files(folder_name)[c(2, 3)]
study_to_gene_number_hash <- hash(study_results, c(15735, 9454))
study_to_human_replicate_number_hash <- hash(study_results, c(4, 4))
study_to_chimp_replicate_number_hash <- hash(study_results, c(4, 4))
cell_maps     <- list.files("cellname_maps/")
cell_counts   <- list.files("cell_numbers_hash/")
name_to_region_hash <- hash(study_results, c("PCC", "dlPFC"))
cell_full_names_hash           <- readRDS("rds_files/cell_full_names.rds")
for (study in study_results){
cell_names                    <- c()
chimp_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_DRGene_numbers.rds"))
human_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_DRGene_numbers.rds"))
chimp_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_URGene_numbers.rds"))
human_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_URGene_numbers.rds"))
considered_Genes              <- readRDS(paste0(folder_name, study, "/", study, FDR, "_three_species_considered_Gene_Number.rds"))
cell_types                    <- names(human_up_regulated)
study_cell_count_files        <- cell_counts[tstrsplit(cell_counts, "_")[[1]] %in% study]
chimp_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[1]))
human_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[2]))
p     <- list()
count <- 1
gene_proportion_table         <- read.xlsx2(paste0("Results/", study,  "/" ,study, "_gene_table_prefiltering_23.xlsx"), row.names = 1, sheetIndex = 1)
for (cell_type in cell_types){
grob1 <- grobTree(textGrob(paste0("n(Human ", cell_full_names_hash[[cell_type]], " cells) :", human_cell_counts[[cell_type]]),
x=0.05,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=10, fontface="bold")))
grob2 <- grobTree(textGrob(paste0("n(Chimp ", cell_full_names_hash[[cell_type]], " cells)  :", chimp_cell_counts[[cell_type]]),
x=0.05,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=10, fontface="bold")))
grob3 <- grobTree(textGrob(paste0("n(Considered non-silent genes) :", gene_proportion_table[cell_type, "Considered.Genes"]),
x=0.05,  y=0.75, hjust=0, gp=gpar(col="black", fontsize=10, fontface="bold")))
print(cell_type)
counts <- data.frame(rbind(c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.DOWN.Proportion"]), "Chimp", "DOWN"),
#DESeq_chimp_DR_proportion[[study]][[cell_type]][1], DESeq_chimp_DR_proportion[[study]][[cell_type]][2],   "Chimp", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.DOWN.Proportion"]), "Human", "DOWN"),
#DESeq_human_DR_proportion[[study]][[cell_type]][1], DESeq_human_DR_proportion[[study]][[cell_type]][2],   "Human", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.UP.Proportion"]),   "Chimp", "UP"  ),
#DESeq_chimp_UR_proportion[[study]][[cell_type]][1], DESeq_chimp_UR_proportion[[study]][[cell_type]][2],   "Chimp", "UP"  ),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.UP.Proportion"]),   "Human", "UP"  )))
#DESeq_human_UR_proportion[[study]][[cell_type]][1], DESeq_human_UR_proportion[[study]][[cell_type]][2],   "Human", "UP"  )))
colnames(counts) <- c("Number", "Species", "Regulation")
counts$Number <- as.numeric(counts$Number)
# counts$lowerbound <- as.numeric(counts$lowerbound)
# counts$upperbound <- as.numeric(counts$upperbound)
p[[count]] <- ggplot(counts, aes(x = factor(Species, level = c("Human", "Chimp")), Number, fill = Regulation))           +
geom_bar(stat="identity", position = "dodge")                                                              +
# geom_errorbar( aes(x=factor(Species, level = c("Human", "Chimp")), ymin=lowerbound, ymax=upperbound),
#                width=0.4, colour="orange", alpha=0.9, size=1.5,
#                position = position_dodge(width = 0.9))                                                     +
labs(title=cell_full_names_hash[[cell_type]])        + theme_classic()                                     +
ylim(c(0, 10.0))                                                                                            +
scale_fill_manual(values=list("darkblue", "red"))                                                          +
geom_text(aes(label=Number, y = Number), position=position_dodge(width=0.9), vjust=-1.0, size=5)       +
labs(y= "Number of genes", x = NULL)   + theme(legend.position = "none")                                   +
theme(axis.text = element_text(size = 15))  + annotation_custom(grob1) + annotation_custom(grob2) +  annotation_custom(grob3)
# +
#   theme(axis.text = element_text(size = 30)) +
#   theme(axis.title = element_text(size = 30)) +
#   theme(plot.title = element_text(size = 30))
#
#
count <- count + 1
}
#do.call(grid.arrange,p, nrow=2)
#p <- p + theme(legend.position = "top")
#g <- grid.arrange(grobs = p, ncol = 3, )
g <- ggarrange(plotlist = p, nrow=2, ncol = 3, common.legend = TRUE, legend="bottom")
# g <- annotate_figure(g, top = text_grob(paste0("Species specific DE genes in ", study, " et. al. study meeting FDR criterion = ", FDR, " using ", study_to_gene_number_hash[[study]], " protein coding orthologous genes (n=4 replicates)"),
#              color = "black", face = "bold", size = 12))
#
g <- annotate_figure(g, top = text_grob(paste0("Percentage of species-specific DE genes in ", name_to_region_hash[[study]], " (", study," et. al.), FDR = ", FDR, " \n"),
color = "black", face = "bold", size = 20, y = 0.5),
bottom = text_grob(paste0(" Number of Genes : ", study_to_gene_number_hash[[study]], " \n Number of human samples : ", study_to_human_replicate_number_hash[[study]],
" \n Number of chimp samples : ", study_to_chimp_replicate_number_hash[[study]]),
color = "black", hjust = 0, x = 0.65, y = 1, size = 15))
ggsave(filename = paste0("Results/", study, "/", study, "FDR", 100*FDR, "_No_error_bar_Proportion_prefiltering_23V2.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
PFC_singlecells_consensusGenome <- readRDS("D:/Downloads/PFC_singlecells_consensusGenome.rds")
PFC_singlecells_consensusGenome@assays
PFC_singlecells_consensusGenome@assays
PFC_singlecells_consensusGenome@assays$RNA
# saveRDS(human_metadata_file, "human_metadata_file.rds")
# saveRDS(chimp_metadata_file, "chimp_metadata_file.rds")
# saveRDS(macaque_metadata_file, "macaque_metadata_file.rds")
#
human_metadata_file  <- readRDS("human_metadata_file.rds")
setwd("D:/Yi/Evolution Paper/Post processing runs/Metadata generator files/Jorstad et. al")
# saveRDS(human_metadata_file, "human_metadata_file.rds")
# saveRDS(chimp_metadata_file, "chimp_metadata_file.rds")
# saveRDS(macaque_metadata_file, "macaque_metadata_file.rds")
#
human_metadata_file  <- readRDS("human_metadata_file.rds")
chimp_metadata_file   <- readRDS("chimp_metadata_file.rds")
macaque_metadata_file <- readRDS("macaque_metadata_file.rds")
human_metadata_file$common_name   <- paste0(human_metadata_file$common_name, "_#human")
chimp_metadata_file$common_name   <- paste0(chimp_metadata_file$common_name, "_#human")
macaque_metadata_file$common_name <- paste0(macaque_metadata_file$common_name, "_#human")
human_metadata_file <- human_metadata_file[, c("sample_id", "common_name", "donor", "human_age", "sex")]
chimp_metadata_file <- chimp_metadata_file[, c("sample_id", "common_name", "donor", "human_age", "sex")]
macaque_metadata_file <- macaque_metadata_file[, c("sample_id", "common_name", "donor","human_age", "sex")]
# saveRDS(human_metadata_file, "human_metadata_file.rds")
# saveRDS(chimp_metadata_file, "chimp_metadata_file.rds")
# saveRDS(macaque_metadata_file, "macaque_metadata_file.rds")
#
human_metadata_file  <- readRDS("human_metadata_file.rds")
chimp_metadata_file   <- readRDS("chimp_metadata_file.rds")
macaque_metadata_file <- readRDS("macaque_metadata_file.rds")
human_metadata_file$common_name   <- paste0(human_metadata_file$common_name, "_#human")
chimp_metadata_file$common_name   <- paste0(chimp_metadata_file$common_name, "_#chimp")
macaque_metadata_file$common_name <- paste0(macaque_metadata_file$common_name, "_#macaque")
human_metadata_file <- human_metadata_file[, c("sample_id", "common_name", "donor", "human_age", "sex")]
chimp_metadata_file <- chimp_metadata_file[, c("sample_id", "common_name", "donor", "human_age", "sex")]
macaque_metadata_file <- macaque_metadata_file[, c("sample_id", "common_name", "donor","human_age", "sex")]
chimp_metadata_file
View(human_metadata_file)
View(human_metadata_file)
View(human_metadata_file)
rownames(human_metadata_file)   <- human_metadata_file$sample_id
rownames(chimp_metadata_file)   <- chimp_metadata_file$sample_id
rownames(macaque_metadata_file) <- macaque_metadata_file$sample_id
human_metadata_file
human_metadata_file   <- human_metadata_file[, -c(1)]
head(human_metadata_file)
chimp_metadata_file   <- chimp_metadata_file[, -c(1)]
macaque_metadata_file <- macaque_metadata_file[, -c(1)]
rownames(human_metadata_file)   <- paste0(rownames(human_metadata_file), "H")
rownames(chimp_metadata_file)   <- paste0(rownames(chimp_metadata_file), "C")
rownames(macaque_metadata_file) <- paste0(rownames(macaque_metadata_file), "M")
human_metadata_file
df_human_macak <- rbind(human_metadata_file, macaque_metadata_file)
df_human_chimp <- rbind(human_metadata_file, chimp_metadata_file)
df_chimp_macak <- rbind(chimp_metadata_file, macaque_metadata_file)
head(df_human_chimp)
df_human_macak$common_name          <- as.factor(df_human_macak$common_name)
df_human_chimp$common_name          <- as.factor(df_human_chimp$common_name)
df_chimp_macak$common_name          <- as.factor(df_chimp_macak$common_name)
df_human_macak$donor          <- as.factor(df_human_macak$donor)
df_human_chimp$donor          <- as.factor(df_human_chimp$donor)
df_chimp_macak$donor          <- as.factor(df_chimp_macak$donor)
colnames(df_chimp_macak)         <- c("trad", "sample_id",  "human_age",  "sex")
colnames(df_human_chimp)         <- c("trad", "sample_id",  "human_age",  "sex")
colnames(df_human_macak)         <- c("trad", "sample_id",  "human_age",  "sex")
df_chimp_macak
df_chimp_macak$trad
df_human_macak$sex          <- as.factor(df_human_macak$sex)
df_human_chimp$sex          <- as.factor(df_human_chimp$sex)
df_chimp_macak$sex          <- as.factor(df_chimp_macak$sex)
colnames(df_chimp_macak)         <- c("trad", "sample_id",  "human_age",  "sex")
colnames(df_human_chimp)         <- c("trad", "sample_id",  "human_age",  "sex")
colnames(df_human_macak)         <- c("trad", "sample_id",  "human_age",  "sex")
df_chimp_macak
head(df_chimp_macak)
saveRDS(df_human_macak, "macaque_pairwise_metadata/df_human_macak.rds")
saveRDS(df_human_chimp, "macaque_pairwise_metadata/df_human_chimp.rds")
saveRDS(df_chimp_macak, "macaque_pairwise_metadata/df_chimp_macak.rds")
df_chimp_macak <- readRDS("D:/Yi/Evolution Paper/Post processing runs/Metadata generator files/Jorstad et. al/macaque_pairwise_metadata/df_chimp_macak.rds")
df_chimp_macak
df_chimp_macak$sex
