considered_Genes              <- readRDS(paste0(folder_name, study, "/", study, FDR, "_three_species_considered_Gene_Number.rds"))
cell_types                    <- names(human_up_regulated)
study_cell_count_files        <- cell_counts[tstrsplit(cell_counts, "_")[[1]] %in% study]
chimp_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[1]))
human_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[2]))
macaque_cell_counts           <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[3]))
p     <- list()
count <- 1
gene_proportion_table         <- read.xlsx2(paste0("Gene_List_results/", study,  "/" ,study, "_gene_table_prefiltering.xlsx"), row.names = 1, sheetIndex = 1)
for (cell_type in cell_types){
grob1 <- grobTree(textGrob(paste0("n(Human ", cell_full_names_hash[[cell_type]], " cells) :", human_cell_counts[[cell_type]]),
x=0.05,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2 <- grobTree(textGrob(paste0("n(Chimp ", cell_full_names_hash[[cell_type]], " cells)  :", chimp_cell_counts[[cell_type]]),
x=0.05,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob4 <- grobTree(textGrob(paste0("n(Macaque ", cell_full_names_hash[[cell_type]], " cells)  :", macaque_cell_counts[[cell_type]]),
x=0.05,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob3 <- grobTree(textGrob(paste0("n(Considered non-silent genes) :", gene_proportion_table[cell_type, "Considered.Genes"]),
x=0.05,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
print(cell_type)
counts <- data.frame(rbind(c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.DOWN.Proportion"]), "Chimp", "DOWN"),
#DESeq_chimp_DR_proportion[[study]][[cell_type]][1], DESeq_chimp_DR_proportion[[study]][[cell_type]][2],   "Chimp", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.DOWN.Proportion"]), "Human", "DOWN"),
#DESeq_human_DR_proportion[[study]][[cell_type]][1], DESeq_human_DR_proportion[[study]][[cell_type]][2],   "Human", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.UP.Proportion"]),   "Chimp", "UP"  ),
#DESeq_chimp_UR_proportion[[study]][[cell_type]][1], DESeq_chimp_UR_proportion[[study]][[cell_type]][2],   "Chimp", "UP"  ),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.UP.Proportion"]),   "Human", "UP"  )))
#DESeq_human_UR_proportion[[study]][[cell_type]][1], DESeq_human_UR_proportion[[study]][[cell_type]][2],   "Human", "UP"  )))
colnames(counts) <- c("Number", "Species", "Regulation")
counts$Number <- as.numeric(counts$Number)
# counts$lowerbound <- as.numeric(counts$lowerbound)
# counts$upperbound <- as.numeric(counts$upperbound)
p[[count]] <- ggplot(counts, aes(x = factor(Species, level = c("Human", "Chimp")), Number, fill = Regulation))           +
geom_bar(stat="identity", position = "dodge")                                                              +
# geom_errorbar( aes(x=factor(Species, level = c("Human", "Chimp")), ymin=lowerbound, ymax=upperbound),
#                width=0.4, colour="orange", alpha=0.9, size=1.5,
#                position = position_dodge(width = 0.9))                                                   +
labs(title=cell_full_names_hash[[cell_type]])        + theme_classic()                                     +
ylim(c(0, 10.0))                                                                                           +
scale_fill_manual(values=list("darkblue", "red"))                                                          +
geom_text(aes(label=Number, y = Number), position=position_dodge(width=0.9), vjust=-1.0, size=5)           +
labs(y= "Number of genes", x = NULL)   + theme(legend.position = "none")                                   +
theme(axis.text = element_text(size = 15))  + annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob4) + annotation_custom(grob3)
# +
#   theme(axis.text = element_text(size = 30)) +
#   theme(axis.title = element_text(size = 30)) +
#   theme(plot.title = element_text(size = 30))
#
#
count <- count + 1
}
#do.call(grid.arrange,p, nrow=2)
#p <- p + theme(legend.position = "top")
#g <- grid.arrange(grobs = p, ncol = 3, )
g <- ggarrange(plotlist = p, nrow=2, ncol = 3, common.legend = TRUE, legend="bottom")
# g <- annotate_figure(g, top = text_grob(paste0("Species specific DE genes in ", study, " et. al. study meeting FDR criterion = ", FDR, " using ", study_to_gene_number_hash[[study]], " protein coding orthologous genes (n=4 replicates)"),
#              color = "black", face = "bold", size = 12))
#
g <- annotate_figure(g, top = text_grob(paste0("Percentage of species-specific DE genes in ", name_to_region_hash[[study]], " (", study," et. al.), FDR = ", FDR, " \n"),
color = "black", face = "bold", size = 20, y = 0.5),
bottom = text_grob(paste0(" Number of Genes : ", study_to_gene_number_hash[[study]], " \n Number of human samples : ", study_to_human_replicate_number_hash[[study]],
" \n Number of chimp samples : ", study_to_chimp_replicate_number_hash[[study]]),
color = "black", hjust = 0, x = 0.65, y = 1, size = 15))
ggsave(filename = paste0("Gene_List_results/", study, "/", study, "FDR", 100*FDR, "_No_error_bar_studies_Proportion_V2.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
FDR = 0.05
folder_name   <- "Gene_List_results/"
study_results <- list.files(folder_name)[c(2, 3, 4)]
study_to_gene_number_hash <- hash(study_results, c(13088, 11141, 9420))
study_to_human_replicate_number_hash <- hash(study_results, c(7, 3, 3))
study_to_chimp_replicate_number_hash <- hash(study_results, c(7, 2, 3))
cell_maps     <- list.files("cellname_maps/")
cell_counts   <- list.files("cell_numbers_hash/")
name_to_region_hash <- hash(study_results, c("MTG", "dlPFC", "ACC"))
cell_full_names_hash           <- readRDS("rds_files/cell_full_names.rds")
for (study in study_results){
cell_names                    <- c()
chimp_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_DRGene_numbers.rds"))
human_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_DRGene_numbers.rds"))
chimp_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_URGene_numbers.rds"))
human_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_URGene_numbers.rds"))
considered_Genes              <- readRDS(paste0(folder_name, study, "/", study, FDR, "_three_species_considered_Gene_Number.rds"))
cell_types                    <- names(human_up_regulated)
study_cell_count_files        <- cell_counts[tstrsplit(cell_counts, "_")[[1]] %in% study]
chimp_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[1]))
human_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[2]))
macaque_cell_counts           <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[3]))
p     <- list()
count <- 1
gene_proportion_table         <- read.xlsx2(paste0("Gene_List_results/", study,  "/" ,study, "_gene_table_prefiltering.xlsx"), row.names = 1, sheetIndex = 1)
for (cell_type in cell_types){
grob1 <- grobTree(textGrob(paste0("n(Human ", cell_full_names_hash[[cell_type]], " cells) :", human_cell_counts[[cell_type]]),
x=0.05,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2 <- grobTree(textGrob(paste0("n(Chimp ", cell_full_names_hash[[cell_type]], " cells)  :", chimp_cell_counts[[cell_type]]),
x=0.05,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob4 <- grobTree(textGrob(paste0("n(Macaque ", cell_full_names_hash[[cell_type]], " cells)  :", macaque_cell_counts[[cell_type]]),
x=0.05,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob3 <- grobTree(textGrob(paste0("n(Considered non-silent genes) :", gene_proportion_table[cell_type, "Considered.Genes"]),
x=0.05,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
print(cell_type)
counts <- data.frame(rbind(c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.DOWN.Proportion"]), "Chimp", "DOWN"),
#DESeq_chimp_DR_proportion[[study]][[cell_type]][1], DESeq_chimp_DR_proportion[[study]][[cell_type]][2],   "Chimp", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.DOWN.Proportion"]), "Human", "DOWN"),
#DESeq_human_DR_proportion[[study]][[cell_type]][1], DESeq_human_DR_proportion[[study]][[cell_type]][2],   "Human", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.UP.Proportion"]),   "Chimp", "UP"  ),
#DESeq_chimp_UR_proportion[[study]][[cell_type]][1], DESeq_chimp_UR_proportion[[study]][[cell_type]][2],   "Chimp", "UP"  ),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.UP.Proportion"]),   "Human", "UP"  )))
#DESeq_human_UR_proportion[[study]][[cell_type]][1], DESeq_human_UR_proportion[[study]][[cell_type]][2],   "Human", "UP"  )))
colnames(counts) <- c("Number", "Species", "Regulation")
counts$Number <- as.numeric(counts$Number)
# counts$lowerbound <- as.numeric(counts$lowerbound)
# counts$upperbound <- as.numeric(counts$upperbound)
p[[count]] <- ggplot(counts, aes(x = factor(Species, level = c("Human", "Chimp")), Number, fill = Regulation))           +
geom_bar(stat="identity", position = "dodge")                                                              +
# geom_errorbar( aes(x=factor(Species, level = c("Human", "Chimp")), ymin=lowerbound, ymax=upperbound),
#                width=0.4, colour="orange", alpha=0.9, size=1.5,
#                position = position_dodge(width = 0.9))                                                   +
labs(title=cell_full_names_hash[[cell_type]])        + theme_classic()                                     +
ylim(c(0, 10.0))                                                                                           +
scale_fill_manual(values=list("darkblue", "red"))                                                          +
geom_text(aes(label=Number, y = Number), position=position_dodge(width=0.9), vjust=-1.0, size=5)           +
labs(y= "Number of genes", x = NULL)   + theme(legend.position = "none")                                   +
theme(axis.text = element_text(size = 15))  + annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob4) + annotation_custom(grob3)
# +
#   theme(axis.text = element_text(size = 30)) +
#   theme(axis.title = element_text(size = 30)) +
#   theme(plot.title = element_text(size = 30))
#
#
count <- count + 1
}
#do.call(grid.arrange,p, nrow=2)
#p <- p + theme(legend.position = "top")
#g <- grid.arrange(grobs = p, ncol = 3, )
g <- ggarrange(plotlist = p, nrow=2, ncol = 3, common.legend = TRUE, legend="bottom")
# g <- annotate_figure(g, top = text_grob(paste0("Species specific DE genes in ", study, " et. al. study meeting FDR criterion = ", FDR, " using ", study_to_gene_number_hash[[study]], " protein coding orthologous genes (n=4 replicates)"),
#              color = "black", face = "bold", size = 12))
#
g <- annotate_figure(g, top = text_grob(paste0("Percentage of species-specific DE genes in ", name_to_region_hash[[study]], " (", study," et. al.), FDR = ", FDR, " \n"),
color = "black", face = "bold", size = 20, y = 0.5),
bottom = text_grob(paste0(" DEG proportion : ", study_to_gene_number_hash[[study]], " \n Number of human samples : ", study_to_human_replicate_number_hash[[study]],
" \n Number of chimp samples : ", study_to_chimp_replicate_number_hash[[study]]),
color = "black", hjust = 0, x = 0.65, y = 1, size = 15))
ggsave(filename = paste0("Gene_List_results/", study, "/", study, "FDR", 100*FDR, "_No_error_bar_studies_Proportion_V2.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
FDR = 0.05
folder_name   <- "Gene_List_results/"
study_results <- list.files(folder_name)[c(2, 3, 4)]
study_to_gene_number_hash <- hash(study_results, c(13088, 11141, 9420))
study_to_human_replicate_number_hash <- hash(study_results, c(7, 3, 3))
study_to_chimp_replicate_number_hash <- hash(study_results, c(7, 2, 3))
cell_maps     <- list.files("cellname_maps/")
cell_counts   <- list.files("cell_numbers_hash/")
name_to_region_hash <- hash(study_results, c("MTG", "dlPFC", "ACC"))
cell_full_names_hash           <- readRDS("rds_files/cell_full_names.rds")
for (study in study_results){
cell_names                    <- c()
chimp_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_DRGene_numbers.rds"))
human_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_DRGene_numbers.rds"))
chimp_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_URGene_numbers.rds"))
human_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_URGene_numbers.rds"))
considered_Genes              <- readRDS(paste0(folder_name, study, "/", study, FDR, "_three_species_considered_Gene_Number.rds"))
cell_types                    <- names(human_up_regulated)
study_cell_count_files        <- cell_counts[tstrsplit(cell_counts, "_")[[1]] %in% study]
chimp_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[1]))
human_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[2]))
macaque_cell_counts           <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[3]))
p     <- list()
count <- 1
gene_proportion_table         <- read.xlsx2(paste0("Gene_List_results/", study,  "/" ,study, "_gene_table_prefiltering.xlsx"), row.names = 1, sheetIndex = 1)
for (cell_type in cell_types){
grob1 <- grobTree(textGrob(paste0("n(Human ", cell_full_names_hash[[cell_type]], " cells) :", human_cell_counts[[cell_type]]),
x=0.05,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2 <- grobTree(textGrob(paste0("n(Chimp ", cell_full_names_hash[[cell_type]], " cells)  :", chimp_cell_counts[[cell_type]]),
x=0.05,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob4 <- grobTree(textGrob(paste0("n(Macaque ", cell_full_names_hash[[cell_type]], " cells)  :", macaque_cell_counts[[cell_type]]),
x=0.05,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob3 <- grobTree(textGrob(paste0("n(Considered non-silent genes) :", gene_proportion_table[cell_type, "Considered.Genes"]),
x=0.05,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
print(cell_type)
counts <- data.frame(rbind(c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.DOWN.Proportion"]), "Chimp", "DOWN"),
#DESeq_chimp_DR_proportion[[study]][[cell_type]][1], DESeq_chimp_DR_proportion[[study]][[cell_type]][2],   "Chimp", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.DOWN.Proportion"]), "Human", "DOWN"),
#DESeq_human_DR_proportion[[study]][[cell_type]][1], DESeq_human_DR_proportion[[study]][[cell_type]][2],   "Human", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.UP.Proportion"]),   "Chimp", "UP"  ),
#DESeq_chimp_UR_proportion[[study]][[cell_type]][1], DESeq_chimp_UR_proportion[[study]][[cell_type]][2],   "Chimp", "UP"  ),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.UP.Proportion"]),   "Human", "UP"  )))
#DESeq_human_UR_proportion[[study]][[cell_type]][1], DESeq_human_UR_proportion[[study]][[cell_type]][2],   "Human", "UP"  )))
colnames(counts) <- c("Number", "Species", "Regulation")
counts$Number <- as.numeric(counts$Number)
# counts$lowerbound <- as.numeric(counts$lowerbound)
# counts$upperbound <- as.numeric(counts$upperbound)
p[[count]] <- ggplot(counts, aes(x = factor(Species, level = c("Human", "Chimp")), Number, fill = Regulation))           +
geom_bar(stat="identity", position = "dodge")                                                              +
# geom_errorbar( aes(x=factor(Species, level = c("Human", "Chimp")), ymin=lowerbound, ymax=upperbound),
#                width=0.4, colour="orange", alpha=0.9, size=1.5,
#                position = position_dodge(width = 0.9))                                                   +
labs(title=cell_full_names_hash[[cell_type]])        + theme_classic()                                     +
ylim(c(0, 10.0))                                                                                           +
scale_fill_manual(values=list("darkblue", "red"))                                                          +
geom_text(aes(label=Number, y = Number), position=position_dodge(width=0.9), vjust=-1.0, size=5)           +
labs(y= "Number of genes", x = NULL)   + theme(legend.position = "none")                                   +
theme(axis.text = element_text(size = 15))  + annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob4) + annotation_custom(grob3)
# +
#   theme(axis.text = element_text(size = 30)) +
#   theme(axis.title = element_text(size = 30)) +
#   theme(plot.title = element_text(size = 30))
#
#
count <- count + 1
}
#do.call(grid.arrange,p, nrow=2)
#p <- p + theme(legend.position = "top")
#g <- grid.arrange(grobs = p, ncol = 3, )
g <- ggarrange(plotlist = p, nrow=2, ncol = 3, common.legend = TRUE, legend="bottom")
# g <- annotate_figure(g, top = text_grob(paste0("Species specific DE genes in ", study, " et. al. study meeting FDR criterion = ", FDR, " using ", study_to_gene_number_hash[[study]], " protein coding orthologous genes (n=4 replicates)"),
#              color = "black", face = "bold", size = 12))
#
g <- annotate_figure(g, top = text_grob(paste0("Percentage of species-specific DE genes in ", name_to_region_hash[[study]], " (", study," et. al.), FDR = ", FDR, " \n"),
color = "black", face = "bold", size = 20, y = 0.5),
bottom = text_grob(paste0(" DEG proportion : ", study_to_gene_number_hash[[study]], " \n Number of human samples : ", study_to_human_replicate_number_hash[[study]],
" \n Number of chimp samples : ", study_to_chimp_replicate_number_hash[[study]]),
color = "black", hjust = 0, x = 0.65, y = 1, size = 15))
ggsave(filename = paste0("Gene_List_results/", study, "/", study, "FDR", 100*FDR, "_No_error_bar_studies_Proportion_V2.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
FDR = 0.05
folder_name   <- "Gene_List_results/"
study_results <- list.files(folder_name)[c(2, 3, 4)]
study_to_gene_number_hash <- hash(study_results, c(13088, 11141, 9420))
study_to_human_replicate_number_hash <- hash(study_results, c(7, 3, 3))
study_to_chimp_replicate_number_hash <- hash(study_results, c(7, 2, 3))
cell_maps     <- list.files("cellname_maps/")
cell_counts   <- list.files("cell_numbers_hash/")
name_to_region_hash <- hash(study_results, c("MTG", "dlPFC", "ACC"))
cell_full_names_hash           <- readRDS("rds_files/cell_full_names.rds")
for (study in study_results){
cell_names                    <- c()
chimp_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_DRGene_numbers.rds"))
human_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_DRGene_numbers.rds"))
chimp_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_URGene_numbers.rds"))
human_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_URGene_numbers.rds"))
considered_Genes              <- readRDS(paste0(folder_name, study, "/", study, FDR, "_three_species_considered_Gene_Number.rds"))
cell_types                    <- names(human_up_regulated)
study_cell_count_files        <- cell_counts[tstrsplit(cell_counts, "_")[[1]] %in% study]
chimp_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[1]))
human_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[2]))
macaque_cell_counts           <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[3]))
p     <- list()
count <- 1
gene_proportion_table         <- read.xlsx2(paste0("Gene_List_results/", study,  "/" ,study, "_gene_table_prefiltering.xlsx"), row.names = 1, sheetIndex = 1)
for (cell_type in cell_types){
grob1 <- grobTree(textGrob(paste0("n(Human ", cell_full_names_hash[[cell_type]], " cells) :", human_cell_counts[[cell_type]]),
x=0.05,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2 <- grobTree(textGrob(paste0("n(Chimp ", cell_full_names_hash[[cell_type]], " cells)  :", chimp_cell_counts[[cell_type]]),
x=0.05,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob4 <- grobTree(textGrob(paste0("n(Macaque ", cell_full_names_hash[[cell_type]], " cells)  :", macaque_cell_counts[[cell_type]]),
x=0.05,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob3 <- grobTree(textGrob(paste0("n(Considered non-silent genes) :", gene_proportion_table[cell_type, "Considered.Genes"]),
x=0.05,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
print(cell_type)
counts <- data.frame(rbind(c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.DOWN.Proportion"]), "Chimp", "DOWN"),
#DESeq_chimp_DR_proportion[[study]][[cell_type]][1], DESeq_chimp_DR_proportion[[study]][[cell_type]][2],   "Chimp", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.DOWN.Proportion"]), "Human", "DOWN"),
#DESeq_human_DR_proportion[[study]][[cell_type]][1], DESeq_human_DR_proportion[[study]][[cell_type]][2],   "Human", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.UP.Proportion"]),   "Chimp", "UP"  ),
#DESeq_chimp_UR_proportion[[study]][[cell_type]][1], DESeq_chimp_UR_proportion[[study]][[cell_type]][2],   "Chimp", "UP"  ),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.UP.Proportion"]),   "Human", "UP"  )))
#DESeq_human_UR_proportion[[study]][[cell_type]][1], DESeq_human_UR_proportion[[study]][[cell_type]][2],   "Human", "UP"  )))
colnames(counts) <- c("Number", "Species", "Regulation")
counts$Number <- as.numeric(counts$Number)
# counts$lowerbound <- as.numeric(counts$lowerbound)
# counts$upperbound <- as.numeric(counts$upperbound)
p[[count]] <- ggplot(counts, aes(x = factor(Species, level = c("Human", "Chimp")), Number, fill = Regulation))           +
geom_bar(stat="identity", position = "dodge")                                                              +
# geom_errorbar( aes(x=factor(Species, level = c("Human", "Chimp")), ymin=lowerbound, ymax=upperbound),
#                width=0.4, colour="orange", alpha=0.9, size=1.5,
#                position = position_dodge(width = 0.9))                                                   +
labs(title=cell_full_names_hash[[cell_type]])        + theme_classic()                                     +
ylim(c(0, 10.0))                                                                                           +
scale_fill_manual(values=list("darkblue", "red"))                                                          +
geom_text(aes(label=Number, y = Number), position=position_dodge(width=0.9), vjust=-1.0, size=5)           +
labs(y= "DEG proportion", x = NULL)   + theme(legend.position = "none")                                   +
theme(axis.text = element_text(size = 15))  + annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob4) + annotation_custom(grob3)
# +
#   theme(axis.text = element_text(size = 30)) +
#   theme(axis.title = element_text(size = 30)) +
#   theme(plot.title = element_text(size = 30))
#
#
count <- count + 1
}
#do.call(grid.arrange,p, nrow=2)
#p <- p + theme(legend.position = "top")
#g <- grid.arrange(grobs = p, ncol = 3, )
g <- ggarrange(plotlist = p, nrow=2, ncol = 3, common.legend = TRUE, legend="bottom")
# g <- annotate_figure(g, top = text_grob(paste0("Species specific DE genes in ", study, " et. al. study meeting FDR criterion = ", FDR, " using ", study_to_gene_number_hash[[study]], " protein coding orthologous genes (n=4 replicates)"),
#              color = "black", face = "bold", size = 12))
#
g <- annotate_figure(g, top = text_grob(paste0("Percentage of species-specific DE genes in ", name_to_region_hash[[study]], " (", study," et. al.), FDR = ", FDR, " \n"),
color = "black", face = "bold", size = 20, y = 0.5),
bottom = text_grob(paste0(" Number of Genes : ", study_to_gene_number_hash[[study]], " \n Number of human samples : ", study_to_human_replicate_number_hash[[study]],
" \n Number of chimp samples : ", study_to_chimp_replicate_number_hash[[study]]),
color = "black", hjust = 0, x = 0.65, y = 1, size = 15))
ggsave(filename = paste0("Gene_List_results/", study, "/", study, "FDR", 100*FDR, "_No_error_bar_studies_Proportion_V2.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
FDR = 0.05
folder_name   <- "Gene_List_results/"
study_results <- list.files(folder_name)[c(2, 3, 4)]
study_to_gene_number_hash <- hash(study_results, c(13088, 11141, 9420))
study_to_human_replicate_number_hash <- hash(study_results, c(7, 3, 3))
study_to_chimp_replicate_number_hash <- hash(study_results, c(7, 2, 3))
cell_maps     <- list.files("cellname_maps/")
cell_counts   <- list.files("cell_numbers_hash/")
name_to_region_hash <- hash(study_results, c("MTG", "dlPFC", "ACC"))
cell_full_names_hash           <- readRDS("rds_files/cell_full_names.rds")
for (study in study_results){
cell_names                    <- c()
chimp_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_DRGene_numbers.rds"))
human_down_regulated          <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_DRGene_numbers.rds"))
chimp_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_CHIMP_URGene_numbers.rds"))
human_up_regulated            <- readRDS(paste0(folder_name, study, "/", study, FDR, "_original_HUMAN_URGene_numbers.rds"))
considered_Genes              <- readRDS(paste0(folder_name, study, "/", study, FDR, "_three_species_considered_Gene_Number.rds"))
cell_types                    <- names(human_up_regulated)
study_cell_count_files        <- cell_counts[tstrsplit(cell_counts, "_")[[1]] %in% study]
chimp_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[1]))
human_cell_counts             <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[2]))
macaque_cell_counts           <- readRDS(paste0("cell_numbers_hash/", study_cell_count_files[3]))
p     <- list()
count <- 1
gene_proportion_table         <- read.xlsx2(paste0("Gene_List_results/", study,  "/" ,study, "_gene_table_prefiltering.xlsx"), row.names = 1, sheetIndex = 1)
for (cell_type in cell_types){
grob1 <- grobTree(textGrob(paste0("n(Human ", cell_full_names_hash[[cell_type]], " cells) :", human_cell_counts[[cell_type]]),
x=0.05,  y=0.95, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob2 <- grobTree(textGrob(paste0("n(Chimp ", cell_full_names_hash[[cell_type]], " cells)  :", chimp_cell_counts[[cell_type]]),
x=0.05,  y=0.90, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob4 <- grobTree(textGrob(paste0("n(Macaque ", cell_full_names_hash[[cell_type]], " cells)  :", macaque_cell_counts[[cell_type]]),
x=0.05,  y=0.85, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
grob3 <- grobTree(textGrob(paste0("n(Considered non-silent genes) :", gene_proportion_table[cell_type, "Considered.Genes"]),
x=0.05,  y=0.80, hjust=0, gp=gpar(col="black", fontsize=8, fontface="bold")))
print(cell_type)
counts <- data.frame(rbind(c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.DOWN.Proportion"]), "Chimp", "DOWN"),
#DESeq_chimp_DR_proportion[[study]][[cell_type]][1], DESeq_chimp_DR_proportion[[study]][[cell_type]][2],   "Chimp", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.DOWN.Proportion"]), "Human", "DOWN"),
#DESeq_human_DR_proportion[[study]][[cell_type]][1], DESeq_human_DR_proportion[[study]][[cell_type]][2],   "Human", "DOWN"),
c(as.numeric(gene_proportion_table[cell_type, "Chimp.Specific.UP.Proportion"]),   "Chimp", "UP"  ),
#DESeq_chimp_UR_proportion[[study]][[cell_type]][1], DESeq_chimp_UR_proportion[[study]][[cell_type]][2],   "Chimp", "UP"  ),
c(as.numeric(gene_proportion_table[cell_type, "Human.Specific.UP.Proportion"]),   "Human", "UP"  )))
#DESeq_human_UR_proportion[[study]][[cell_type]][1], DESeq_human_UR_proportion[[study]][[cell_type]][2],   "Human", "UP"  )))
colnames(counts) <- c("Number", "Species", "Regulation")
counts$Number <- as.numeric(counts$Number)
# counts$lowerbound <- as.numeric(counts$lowerbound)
# counts$upperbound <- as.numeric(counts$upperbound)
p[[count]] <- ggplot(counts, aes(x = factor(Species, level = c("Human", "Chimp")), Number, fill = Regulation))           +
geom_bar(stat="identity", position = "dodge")                                                              +
# geom_errorbar( aes(x=factor(Species, level = c("Human", "Chimp")), ymin=lowerbound, ymax=upperbound),
#                width=0.4, colour="orange", alpha=0.9, size=1.5,
#                position = position_dodge(width = 0.9))                                                   +
labs(title=cell_full_names_hash[[cell_type]])        + theme_classic()                                     +
ylim(c(0, 10.0))                                                                                           +
scale_fill_manual(values=list("darkblue", "red"))                                                          +
geom_text(aes(label=Number, y = Number), position=position_dodge(width=0.9), vjust=-1.0, size=5)           +
labs(y= "DEG proportion", x = NULL)   + theme(legend.position = "none")                                   +
theme(axis.text = element_text(size = 15))  + annotation_custom(grob1) + annotation_custom(grob2) + annotation_custom(grob4) + annotation_custom(grob3)
# +
#   theme(axis.text = element_text(size = 30)) +
#   theme(axis.title = element_text(size = 30)) +
#   theme(plot.title = element_text(size = 30))
#
#
count <- count + 1
}
#do.call(grid.arrange,p, nrow=2)
#p <- p + theme(legend.position = "top")
#g <- grid.arrange(grobs = p, ncol = 3, )
g <- ggarrange(plotlist = p, nrow=2, ncol = 3, common.legend = TRUE, legend="bottom")
# g <- annotate_figure(g, top = text_grob(paste0("Species specific DE genes in ", study, " et. al. study meeting FDR criterion = ", FDR, " using ", study_to_gene_number_hash[[study]], " protein coding orthologous genes (n=4 replicates)"),
#              color = "black", face = "bold", size = 12))
#
g <- annotate_figure(g, top = text_grob(paste0("Percentage of species-specific DE genes in ", name_to_region_hash[[study]], " (", study," et. al.), FDR = ", FDR, " \n"),
color = "black", face = "bold", size = 20, y = 0.5),
bottom = text_grob(paste0(" Number of Genes : ", study_to_gene_number_hash[[study]], " \n Number of human samples : ", study_to_human_replicate_number_hash[[study]],
" \n Number of chimp samples : ", study_to_chimp_replicate_number_hash[[study]]),
color = "black", hjust = 0, x = 0.65, y = 1, size = 15))
ggsave(filename = paste0("Gene_List_results/", study, "/", study, "FDR", 100*FDR, "_No_error_bar_studies_Proportion_V2.jpg"), plot = g, device = "jpeg",
width=14.4, height=9, dpi=300)
}
suppressMessages(suppressWarnings(library(ggplot2)))
suppressMessages(suppressWarnings(library(readxl)))
suppressWarnings(suppressMessages(library(gridExtra)))
suppressWarnings(suppressMessages(library(ggpubr)))
suppressWarnings(suppressMessages(library(grid)))
suppressWarnings(suppressMessages(library(dplyr)))
suppressMessages(suppressWarnings(library(rstatix)))
suppressMessages(suppressWarnings(library(stringr)))
studies             <- c("Caglayan", "Ma")
cellnames           <- c("Astro", "Excite", "Inhibit", "Microglia", "Oligo", "OPC")
cellfullnames       <- c("Astrocyte", "Excitatory Neuron", "Inhibitory Neuron", "Microglia", "Oligodendrocyte", "OPC")
names(cellfullnames)    <- cellnames
significant_GO_table <- read_excel("Source Files/Figure 2/Significant Biological Processes from DEGs - Figure 2.xlsx")
considered_GO_table  <- read_excel("Source Files/Figure 2/Considered Biological Processes from DEGs - Figure 2.xlsx")
significant_GO_table$Significant <- "YES"
considered_GO_table$Significant  <- "NO"
all_GO_terms                     <- rbind(significant_GO_table, considered_GO_table)
GO_table                         <- all_GO_terms[all_GO_terms$ID %in% significant_GO_table$ID, ]
up_GO_Table                      <- GO_table[GO_table$regulation %in% c("HU", "CU"), ]
down_GO_Table                    <- GO_table[GO_table$regulation %in% c("HD", "CD"), ]
sub_table <- down_GO_Table #[up_GO_Table$cell_type %in% c("Inhibit" ,"Microglia") == FALSE, ]
sub_table <- sub_table[sub_table$Count > 10, ]
sub_table <- sub_table[sub_table$Significant == "YES", ]
regulation.labs <- c("Chimpanzee Downregulated Genes", "Human Downregulated Genes")
names(regulation.labs) <- c("CD", "HD")
g <- ggplot(data = sub_table, aes(x = cell_type, y = Description,
color = `p.adjust`, size = Count, shape = region)) +
geom_point() +
scale_color_gradient(low = "blue", high = "red", limits = c(0, 0.05)) +
theme_bw() +
ylab("") +
xlab("") +
ggtitle("GO enrichment analysis") +
facet_grid(. ~ regulation, labeller = labeller(regulation = regulation.labs)) +
theme(axis.line = element_line(colour = "black"),
axis.text.x=element_text(size=15, angle = 45, vjust = 0.5),
axis.text.y=element_text(size=14),
strip.text = element_text(face="bold", size=10))    +
scale_x_discrete(breaks=c("Astro","Excite", "Inhibit", "Microglia"  ,"Oligo", "OPC"),
labels=c("Astrocyte","Excitatory Neuron", "Inhibitory Neuron", "Microglia", "Oligodendrocyte", "OPC"))
ggsave(filename = "Figures/Figure 2/V2/Figure 2B - GO terms - downregulation_V2.1 - FDR5V3.jpg", plot = g, device = "jpeg",
width=10, height=4, dpi=300)
sub_table <- down_GO_Table #[up_GO_Table$cell_type %in% c("Inhibit" ,"Microglia") == FALSE, ]
sub_table <- sub_table[sub_table$Count > 10, ]
sub_table <- sub_table[sub_table$Significant == "YES", ]
regulation.labs <- c("Chimpanzee Downregulated Genes", "Human Downregulated Genes")
names(regulation.labs) <- c("CD", "HD")
g <- ggplot(data = sub_table, aes(x = cell_type, y = Description,
color = `p.adjust`, size = Count, shape = region)) +
geom_point() +
scale_color_gradient(low = "blue", high = "red", limits = c(0, 0.05)) +
theme_bw() +
ylab("") +
xlab("") +
ggtitle("GO enrichment analysis") +
facet_grid(. ~ regulation, labeller = labeller(regulation = regulation.labs)) +
theme(axis.line = element_line(colour = "black"),
axis.text.x=element_text(size=15, angle = 45, vjust = 0.5),
axis.text.y=element_text(size=14),
strip.text = element_text(face="bold", size=10))    +
scale_x_discrete(breaks=c("Astro","Excite", "Inhibit", "Microglia"  ,"Oligo", "OPC"),
labels=c("Astrocyte","Excitatory Neuron", "Inhibitory Neuron", "Microglia", "Oligodendrocyte", "OPC"))
ggsave(filename = "Figures/Figure 2/V2/Figure 2B - GO terms - downregulation_V2.1 - FDR5V3.jpg", plot = g, device = "jpeg",
width=10, height=6, dpi=300)
sub_table <- down_GO_Table #[up_GO_Table$cell_type %in% c("Inhibit" ,"Microglia") == FALSE, ]
sub_table <- sub_table[sub_table$Count > 10, ]
sub_table <- sub_table[sub_table$Significant == "YES", ]
regulation.labs <- c("Chimpanzee Downregulated Genes", "Human Downregulated Genes")
names(regulation.labs) <- c("CD", "HD")
g <- ggplot(data = sub_table, aes(x = cell_type, y = Description,
color = `p.adjust`, size = Count, shape = region)) +
geom_point() +
scale_color_gradient(low = "blue", high = "red", limits = c(0, 0.05)) +
theme_bw() +
ylab("") +
xlab("") +
ggtitle("GO enrichment analysis") +
facet_grid(. ~ regulation, labeller = labeller(regulation = regulation.labs)) +
theme(axis.line = element_line(colour = "black"),
axis.text.x=element_text(size=15, angle = 45, vjust = 0.5),
axis.text.y=element_text(size=14),
strip.text = element_text(face="bold", size=10))    +
scale_x_discrete(breaks=c("Astro","Excite", "Inhibit", "Microglia"  ,"Oligo", "OPC"),
labels=c("Astrocyte","Excitatory Neuron", "Inhibitory Neuron", "Microglia", "Oligodendrocyte", "OPC"))
ggsave(filename = "Figures/Figure 2/V2/Figure 2B - GO terms - downregulation_V2.1 - FDR5V3.jpg", plot = g, device = "jpeg",
width=10, height=5, dpi=300)
sub_table <- down_GO_Table #[up_GO_Table$cell_type %in% c("Inhibit" ,"Microglia") == FALSE, ]
sub_table <- sub_table[sub_table$Count > 10, ]
sub_table <- sub_table[sub_table$Significant == "YES", ]
regulation.labs <- c("Chimpanzee Downregulated Genes", "Human Downregulated Genes")
names(regulation.labs) <- c("CD", "HD")
g <- ggplot(data = sub_table, aes(x = cell_type, y = Description,
color = `p.adjust`, size = Count, shape = region)) +
geom_point() +
scale_color_gradient(low = "blue", high = "red", limits = c(0, 0.05)) +
theme_bw() +
ylab("") +
xlab("") +
ggtitle("GO enrichment analysis") +
facet_grid(. ~ regulation, labeller = labeller(regulation = regulation.labs)) +
theme(axis.line = element_line(colour = "black"),
axis.text.x=element_text(size=15, angle = 45, vjust = 0.5),
axis.text.y=element_text(size=14),
strip.text = element_text(face="bold", size=10))    +
scale_x_discrete(breaks=c("Astro","Excite", "Inhibit", "Microglia"  ,"Oligo", "OPC"),
labels=c("Astrocyte","Excitatory Neuron", "Inhibitory Neuron", "Microglia", "Oligodendrocyte", "OPC"))
ggsave(filename = "Figures/Figure 2/V2/Figure 2B - GO terms - downregulation_V2.1 - FDR5V3.jpg", plot = g, device = "jpeg",
width=10, height=5.5, dpi=300)
setwd("D:/Yi/Evolution Paper/Post processing runs/Metadata generator files/Ma et. al")
suppressMessages(suppressWarnings(library(Seurat)))
suppressMessages(suppressWarnings(library(hash)))
suppressMessages(suppressWarnings(library(plyr)))
suppressMessages(suppressWarnings(library(readxl)))
suppressMessages(suppressWarnings(library(dplyr)))
suppressMessages(suppressWarnings(library(tidyverse)))
source("sample_to_age_function.R")
human_metadata_file <- read_excel("author_source/snRNA-seq_Human_cell_meta.xlsx")
chimp_metadata_file <- read_excel("author_source/snRNA-seq_Chimpanzee_cell_meta.xlsx")
macak_metadata_file <- read_excel("author_source/snRNA-seq_Rhesus_cell_meta.xlsx")
covariates_file     <- read_excel("author_source/covariates_file.xlsx", skip = 1)
df_chimp_macak <- readRDS("D:/Yi/Evolution Paper/Post processing runs/Metadata generator files/Ma et. al/nonbarcode_changed_metadata_files_MD1/df_chimp_macak.rds")
df_chimp_macak
df_chimp_macak$trad
